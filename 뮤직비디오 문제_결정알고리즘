import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {

//9 3
//1 2 3 4 5 6 7 8 9
//17
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer stk = new StringTokenizer(br.readLine());

        int n = Integer.parseInt(stk.nextToken());
        int a = Integer.parseInt(stk.nextToken());
        int[] arr = new int[n];
        stk = new StringTokenizer(br.readLine());
        for (int i = 0; i < n; i++) {
            arr[i] = Integer.parseInt(stk.nextToken());
        }

        int answer = Solution(n,a,arr);
        System.out.println(answer);
    }

    private static int Solution(int n, int a, int[] arr) {
//        9 3
//        1 2 3 4 5 6 7 8 9
//        9 10 11 12 13 14 15 16 .. 45
//        27
        int answer =  0;
        int lt= Arrays.stream(arr).max().getAsInt();
        int rt = Arrays.stream(arr).sum();
        int mid = 0;
        while (lt <= rt){
            mid = (lt+rt)/2;
            if(validMid(mid, arr) <= a) {
                answer = mid;
                rt = mid-1;
            }else {
                lt = mid +1;
            }
        }
        return answer;
    }

    private static int validMid(int capacity, int[] arr) {
        //27
        int count = 1;
        int sum = 0;
        for (int i : arr) {
            if(sum+i > capacity){
                count++;
                sum = i;
            }else {
                sum += i;
            }
        }
        return count;
    }

}
