백준 15828 번

1번풀이 - Deque로 풀었으며 테스트 케이스는 다 맞는데 결과는 틀렸다고 나옴 이유는 모르겠음.

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;


public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        Deque<Integer> que = new ArrayDeque<>();
        int chk = 0;

        while (chk != -1){
            int m = Integer.parseInt(br.readLine());
            chk=m;
            if(-1 == m) break;

            if (m == 0) {
                que.poll();
            } else if(n > que.size() ){
                que.offer(m);
            }
        }
        if(que.isEmpty()) {
            System.out.println("empty");
        }else {
            for (int i = 0; i <= que.size(); i++) {
                System.out.print(que.poll()+" ");
            }
        }
    }
}



2번 풀이 - Queue를 이용하여 풀었으며, 정답

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;


public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringBuilder sb =new StringBuilder();
        int n = Integer.parseInt(br.readLine());
        Queue<Integer> que = new LinkedList<>();
        int chk = 0;

        while (chk != -1){
            int m = Integer.parseInt(br.readLine());
            chk=m;
            if(-1 == m) break;

            if (m == 0) {
                que.remove();
            } else if(n > que.size() ){
                que.add(m);
            }
        }
        if(que.isEmpty()) {
            System.out.print("empty");
        }else {
           for (int i :que) {
               sb.append(i+" ");
           }
            System.out.print(sb);
        }
    }
}
