import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class Main {

    static int n,k;
    static int result=0;
    static ArrayList<ArrayList<Integer>> graph = new ArrayList<>();
    static int[] ch;
    public static void main(String[] args) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer stk = new StringTokenizer(br.readLine());

        n = Integer.parseInt(stk.nextToken());

        for (int i = 0; i <=n; i++) {
            graph.add(new ArrayList<>());
        }
        stk = new StringTokenizer(br.readLine());
        k = Integer.parseInt(stk.nextToken());

        ch = new int[n+1];
        for (int i = 0; i < k; i++) {
            stk = new StringTokenizer(br.readLine());
            int a= Integer.parseInt(stk.nextToken());
            int b= Integer.parseInt(stk.nextToken());
            graph.get(a).add(b);
            graph.get(b).add(a);
        }
        dfs(1);
        System.out.print(result);
    }

    private static void dfs(int x) {
        ch[x] =1;
        for (int i = 0; i < graph.get(x).size(); i++) {
            Integer y = graph.get(x).get(i);
            if(ch[y]==0) {
                dfs(y);
                result++;
            }
        }
    }

}
