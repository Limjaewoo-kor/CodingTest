import java.util.*;
// PriorityQueue 문제
// N개이 기업에서 강연 요청을 해왔다.
// 각 기업은 D일 안에 와서 강연을 해 주면 M만큼의 강연료를 주기로 했다.
//6
//50 2
//20 1
//40 2
//60 3
//30 3
//30 1
class Lecture implements Comparable<Lecture> {

    public int money;
    public int date;

    public Lecture(int money, int date) {
        this.money = money;
        this.date = date;
    }


    @Override
    public int compareTo(Lecture o) {
        return o.date - this.date;
    }
}

public class Main {

    static int n, max = Integer.MIN_VALUE;
    public int solution(ArrayList<Lecture> arr){
        int answer = 0;
        PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
        Collections.sort(arr);
        int j = 0;
        for (int i = max; i >= 1; i--) {
            for ( ; j < n; j++) {
                if(arr.get(j).date < i) break;
                pq.offer(arr.get(j).money);
            }
            if(!pq.isEmpty()) answer+= pq.poll();
        }
        return answer;

    }


    public static void main(String[] args) {
      Main T = new Main();
      Scanner sc = new Scanner(System.in);
      n=sc.nextInt();
      ArrayList<Lecture> arr = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            int m = sc.nextInt();
            int d = sc.nextInt();
            arr.add(new Lecture(m,d));
            if (d > max) max = d;
        }
        System.out.println(T.solution(arr));

    }

}
