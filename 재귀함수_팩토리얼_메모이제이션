

//재귀함수 기본
public class Main {

    static int[] fibo;

    public static void main(String[] args) {
        Main T = new Main();
        int n = 5;

//        System.out.println(T.DFS(n));

        fibo = new int[n+1];
        T.DFS(n);
        for (int i = 1; i <= n; i++) {
            System.out.print(fibo[i]+" ");
        }

    }

//    피보나치 재귀(메모이제이션)  피보나치의 효율을 따지자면, 재귀보다는 for문이 더 좋다.
    private int DFS(int n) {
        if (fibo[n] > 0){
            return fibo[n];
        }
        if(n == 1) {
            return fibo[n] = 1;
        }else if (n==2){
            return fibo[n] = 1;
        }else {
            return fibo[n] = DFS(n-2)+DFS(n-1);
        }
    }


//    팩토리얼 T.DFS(5);
//    private int DFS(int n) {
//        if(n==0){
//            return 1;
//        }else {
//            return n*DFS(n-1);
//        }
//    }


//    2진수로 변환하기   T.DFS(11);
//    private void DFS(int n) {
//        if(n == 0){
//            return;
//        }else {
//            DFS(n/2);
//            System.out.print(n%2+"");
//        }
//    }

//    특정 숫자 이전의 숫자를 모두 찍어내기   T.DFS(3);
//    private void DFS(int n) {
//        if (n==0){
//            return;
//        }else {
//            DFS(n - 1);
//            System.out.print(n+ " ");
//        }
//    }




}
