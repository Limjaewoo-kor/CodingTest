백준 18258번 큐2

1번 풀이 - Deque를 쓰지않고 Queue로 풀어보려했지만, 메모리 초과로 실패 [ 아래코드 ]

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;


public class Main {
    public StringBuilder solution(int n, String[] arr) {
        StringBuilder sb = new StringBuilder();
        Queue<Integer> que = new LinkedList<>();
        List<Integer> tmp = new ArrayList<>();

        for (int i = 0; i < n; i++) {
            if(arr[i].indexOf("push") != -1) {
                String[] s = arr[i].split(" ");
                que.offer(Integer.valueOf(s[1]));
            }else if(arr[i].indexOf("pop") != -1){
                if(!que.isEmpty()) sb.append(que.poll()+"\n");
                else sb.append(-1+"\n");
            }else if(arr[i].indexOf("size") != -1) {
                    sb.append(que.size()+"\n");
            }else if (arr[i].indexOf("empty") != -1) {
                if(que.isEmpty()){
                    sb.append(1+"\n");
                }else {
                    sb.append(0+"\n");
                }
            } else if (arr[i].indexOf("front") != -1) {
                if(que.isEmpty()){
                    sb.append(-1+"\n");
                }else {
                    sb.append(que.peek()+"\n");
                }
            } else if (arr[i].indexOf("back") != -1) {
                if(que.isEmpty()){
                    sb.append(-1+"\n");
                }else {
                    while (que.size()!=1){
                        tmp.add(que.poll());
                    }
                    if(que.size()==1){
                        int abc = que.poll();
                        sb.append(abc+"\n");
                        tmp.add(abc);
                        for (int j = 0; j < tmp.size(); j++) {
                            que.offer(tmp.get(j));
                        }
                    }
                }
            }
        }
        return sb;
    }

    public static void main(String[] args) throws IOException {
        Main T = new Main();
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        String[] arr = new String[n];
        for (int i = 0; i < n; i++) {
            arr[i] = br.readLine();
        }
        System.out.print(T.solution(n,arr));
    }
}


2번 풀이 - Deque를 이용하여 풀이 [ 성공 ]


import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;


public class Main {
    public StringBuilder solution(int n, String[] arr) {
        StringBuilder sb = new StringBuilder();
        Deque<Integer> que = new LinkedList<>();

        for (int i = 0; i < n; i++) {
            if(arr[i].indexOf("push") != -1) {
                String[] s = arr[i].split(" ");
                que.offer(Integer.valueOf(s[1]));
            }else if(arr[i].indexOf("pop") != -1){
                if(!que.isEmpty()) sb.append(que.poll()+"\n");
                else sb.append(-1+"\n");
            }else if(arr[i].indexOf("size") != -1) {
                    sb.append(que.size()+"\n");
            }else if (arr[i].indexOf("empty") != -1) {
                if(que.isEmpty()){
                    sb.append(1+"\n");
                }else {
                    sb.append(0+"\n");
                }
            } else if (arr[i].indexOf("front") != -1) {
                if(que.isEmpty()){
                    sb.append(-1+"\n");
                }else {
                    sb.append(que.peekFirst()+"\n");
                }
            } else if (arr[i].indexOf("back") != -1) {
                if(que.isEmpty()){
                    sb.append(-1+"\n");
                }else {
                    sb.append(que.peekLast()+"\n");
                }
            }
        }
        return sb;
    }

    public static void main(String[] args) throws IOException {
        Main T = new Main();
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        String[] arr = new String[n];
        for (int i = 0; i < n; i++) {
            arr[i] = br.readLine();
        }
        System.out.print(T.solution(n,arr));
    }
}
