import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {

//            5 3
//        1 2 8 4 9
//    3
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer stk = new StringTokenizer(br.readLine());

        int n = Integer.parseInt(stk.nextToken());
        int a = Integer.parseInt(stk.nextToken());
        int[] arr = new int[n];
        stk = new StringTokenizer(br.readLine());
        for (int i = 0; i < n; i++) {
            arr[i] = Integer.parseInt(stk.nextToken());
        }

        int answer = Solution(n,a,arr);
        System.out.println(answer);
    }

    private static int Solution(int n, int a, int[] arr) {
//        5 3
//        1 2 4 8 9
//        3
        int answer =  0;
        Arrays.sort(arr);
        int lt= 1;
        int rt = arr[n-1];

        while (lt <= rt){
            int mid = (lt+rt)/2;
            if(getCnt(arr, mid) >= a) {  //5 3   4 3  3 3
                answer = mid;
                lt = mid+1;
            }else {
                rt = mid -1;
            }
        }
        return answer;
    }

    private static int getCnt(int[] arr, int dist) {
        //        1 2 4 8 9
        //5
        int cnt = 1;
        int ep = arr[0]; // 말 배치

        for (int i = 0; i < arr.length; i++) {
            if(arr[i] - ep >= dist) { //말 배치할 좌표에서 이전에 배치한 좌표를 뺀 값이 mid값 보다 크거나 같아야한다.
                cnt++;
                ep = arr[i];
            }
        }
        
        return cnt;
    }

}
